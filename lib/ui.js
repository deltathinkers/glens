// Generated by CoffeeScript 1.4.0
var Ui;

window.openLoadDialog = function() {
  return $('#loadModal').modal();
};

window.effectController = {
  gcodeIndex: 10,
  animate: false,
  motionLine: true,
  feedLine: true,
  speed: 0,
  color: [0, 128, 255]
};

Ui = (function() {
  var defaultImportPath;

  Ui.prototype.controllers = {
    gcodeIndex: null,
    animate: null
  };

  defaultImportPath = 'models/octocat.gcode';

  Ui.prototype.onGcodeLoaded = function(model) {
    this.renderer.onGcodeLoaded(model);
    return $('#loadModal').modal('hide');
  };

  function Ui() {
    if (!Modernizr.webgl) {
      alert('Sorry, you need a WebGL capable browser to use this.');
      return false;
    }
    if (!Modernizr.localstorage) {
      alert('Man, your browser is ancient. WTF Can\'t work like this!');
      return false;
    }
    this.renderer = new Renderer($('#renderArea')[0], this);
    GCodeImporter.setup(this.onGcodeLoaded.bind(this), defaultImportPath);
    this.setupDatGUI();
  }

  Ui.prototype.setupDatGUI = function() {
    var _this = this;
    this.dui = new dat.GUI();
    $('.dg.main').mousedown(function(e) {
      return e.stopPropagation();
    });
    this.controllers.animate = this.dui.add(effectController, 'animate').listen();
    this.controllers.motionLine = this.dui.add(effectController, 'motionLine').listen();
    this.controllers.feedLine = this.dui.add(effectController, 'feedLine').listen();
    this.controllers.gcodeIndex = this.dui.add(effectController, 'gcodeIndex', 0, 1000, 1000).listen();
    this.controllers.gcodeIndex.onChange(function(val) {
      if (effectController.animate) {
        return _this.controllers.animate.setValue(false);
      }
    });
    this.controllers.motionLine.onChange(function() {
      return _this.renderer.refreshObject();
    });
    return this.controllers.feedLine.onChange(function() {
      return _this.renderer.refreshObject();
    });
  };

  return Ui;

})();

$(function() {
  return window.ui = new Ui;
});
